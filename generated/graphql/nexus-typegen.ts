/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../../share/graphql/context/type.context"
import type { core, connectionPluginCore } from "nexus"
import type { FieldAuthorizeResolver } from "nexus/dist/plugins/fieldAuthorizePlugin"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
    /**
     * Adds a Relay-style connection to the type, with numerous options for configuration
     *
     * @see https://nexusjs.org/docs/plugins/connection
     */
    connectionField<FieldName extends string>(
      fieldName: FieldName,
      config: connectionPluginCore.ConnectionFieldConfig<TypeName, FieldName>
    ): void
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AddConversationInputType: { // input type
    items?: Array<NexusGenInputs['ConversationItemInputType'] | null> | null; // [ConversationItemInputType]
    title: string; // String!
  }
  AddCustomFieldInputType: { // input type
    description?: string | null; // String
    field: string; // String!
    id?: string | null; // ID
    inputType?: NexusGenEnums['CustomFieldInputType'] | null; // CustomFieldInputType
    title: string; // String!
  }
  AddCustomerInputType: { // input type
    email?: string | null; // String
    fullname?: string | null; // String
    password?: string | null; // String
    phoneNumber?: string | null; // String
    username?: string | null; // String
  }
  AddFolderImageInputType: { // input type
    name: string; // String!
    type?: NexusGenEnums['TypeFile'] | null; // TypeFile
  }
  AddMemberInputType: { // input type
    email?: string | null; // String
    fullname?: string | null; // String
    password?: string | null; // String
  }
  AddPostOfUserAppInput: { // input type
    content?: string | null; // String
    description?: string | null; // String
    isDraft?: boolean | null; // Boolean
    keywordId: string; // ID!
    outline?: string | null; // String
    projectId: string; // ID!
    slug?: string | null; // String
    title?: string | null; // String
    url?: string | null; // String
    userId: string; // ID!
    workspaceId: string; // ID!
  }
  AddRootAdminInputType: { // input type
    email?: string | null; // String
    fullname?: string | null; // String
    password?: string | null; // String
    username?: string | null; // String
  }
  AddServiceCategoryInputType: { // input type
    description?: string | null; // String
    title?: string | null; // String
  }
  AddUserAdminInputType: { // input type
    email?: string | null; // String
    fullname?: string | null; // String
    password?: string | null; // String
    username?: string | null; // String
  }
  ChangeDefaultProjectInputType: { // input type
    default?: boolean | null; // Boolean
    id?: string | null; // ID
  }
  ChangeEmailUserInputType: { // input type
    email?: string | null; // String
    newEmail?: string | null; // String
  }
  ChangeExpiredTimeWorkspaceInputType: { // input type
    expiredAt: NexusGenScalars['DateTime']; // DateTime!
    workspaceId: string; // ID!
  }
  ChangePasswordUserInputType: { // input type
    email?: string | null; // String
    newPassword?: string | null; // String
    password?: string | null; // String
  }
  ConfirmRequestBuyWordInputType: { // input type
    buyWordId?: string | null; // ID
    isConfirm?: boolean | null; // Boolean
  }
  ContentsInputType: { // input type
    page?: number | null; // Int
    perPage?: number | null; // Int
    search?: string | null; // String
  }
  ConversationItemInputType: { // input type
    conversationId?: string | null; // ID
    createdById?: string | null; // ID
    message: string; // String!
  }
  ConversationsInputType: { // input type
    page?: number | null; // Int
    perPage?: number | null; // Int
    type?: NexusGenEnums['ConversationType'] | null; // ConversationType
  }
  CreateAiSettingAppInputType: { // input type
    id?: string | null; // ID
    leadingSentence?: string | null; // String
    max_tokens?: number | null; // Int
    type?: NexusGenEnums['TypeAiSettingApp'] | null; // TypeAiSettingApp
  }
  CreatePaymentHistoryInputType: { // input type
    packageItemId: string; // String!
    transactionType: NexusGenEnums['TransactionType']; // TransactionType!
  }
  DataServiceInputType: { // input type
    categoryId?: string | null; // ID
    description?: string | null; // String
    leadingLanguage?: string | null; // String
    leadingSentence?: string | null; // String
    leadingStyleContent?: string | null; // String
    model?: NexusGenEnums['ModelAi'] | null; // ModelAi
    systemMessage?: string | null; // String
    title?: string | null; // String
  }
  DataTeamInputType: { // input type
    name?: string | null; // String
  }
  DataUpdateUserInputType: { // input type
    fullname?: string | null; // String
    phoneNumber?: string | null; // String
  }
  DocumentDataInputType: { // input type
    content?: string | null; // String
    description?: string | null; // String
    isDraft?: boolean | null; // Boolean
    keywordId: string; // ID!
    outline?: string | null; // String
    slug?: string | null; // String
    title?: string | null; // String
    url?: string | null; // String
  }
  DocumentsInputType: { // input type
    page?: number | null; // Int
    perPage?: number | null; // Int
    projectId?: string | null; // ID
    search?: string | null; // String
  }
  FolderImagesInputType: { // input type
    page?: number | null; // Int
    perPage?: number | null; // Int
    projectId?: string | null; // ID
    search?: string | null; // String
    type?: NexusGenEnums['TypeFile'] | null; // TypeFile
  }
  ForgotPasswordInputType: { // input type
    email?: string | null; // String
  }
  ImagesInputType: { // input type
    folderId?: string | null; // ID
    page?: number | null; // Int
    perPage?: number | null; // Int
    projectId?: string | null; // ID
    search?: string | null; // String
    type?: NexusGenEnums['TypeFile'] | null; // TypeFile
  }
  KeywordDataInputType: { // input type
    parentId?: string | null; // ID
    value: string; // String!
  }
  KeywordsInputType: { // input type
    page?: number | null; // Int
    perPage?: number | null; // Int
    search?: string | null; // String
  }
  KeywordsOfUserAppInput: { // input type
    page?: number | null; // Int
    perPage?: number | null; // Int
    projectId?: string | null; // ID
  }
  ListBuyWordAdminInputType: { // input type
    page?: number | null; // Int
    perPage?: number | null; // Int
  }
  ListMessageConversationInputType: { // input type
    conversationId?: string | null; // ID
    page?: number | null; // Int
    perPage?: number | null; // Int
  }
  LoginAppInput: { // input type
    password?: string | null; // String
    username?: string | null; // String
  }
  LoginInputType: { // input type
    password?: string | null; // String
    username?: string | null; // String
  }
  PageChannelsInputType: { // input type
    isActive?: boolean | null; // Boolean
    isAll?: boolean | null; // Boolean
    page?: number | null; // Int
    perPage?: number | null; // Int
    type?: NexusGenEnums['ChannelType'] | null; // ChannelType
  }
  PaymentHistoriesAdminInputType: { // input type
    isConfirm?: boolean | null; // Boolean
    page?: number | null; // Int
    perPage?: number | null; // Int
  }
  PaymentHistoriesInputType: { // input type
    isConfirm?: boolean | null; // Boolean
    page?: number | null; // Int
    perPage?: number | null; // Int
  }
  PexelsPhotosInputType: { // input type
    page?: number | null; // Int
    perPage?: number | null; // Int
    search?: string | null; // String
  }
  PostOfProjectAppInput: { // input type
    page?: number | null; // Int
    perPage?: number | null; // Int
    projectId: string; // ID!
    workspaceId: string; // ID!
  }
  ProjectDataInputType: { // input type
    description?: string | null; // String
    name: string; // String!
    url?: string | null; // String
  }
  ProjectOfUserAppInput: { // input type
    page?: number | null; // Int
    perPage?: number | null; // Int
    teamId: string; // ID!
  }
  ProjectsInputType: { // input type
    page?: number | null; // Int
    perPage?: number | null; // Int
    search?: string | null; // String
  }
  ReSearchDocumentInputType: { // input type
    documentId?: string | null; // ID
    question?: string | null; // String
  }
  RequestBuyWordInputType: { // input type
    numberWord: number; // Int!
    price: number; // Int!
    transactionType: NexusGenEnums['TransactionType']; // TransactionType!
  }
  RequestHistoriesInputType: { // input type
    page?: number | null; // Int
    perPage?: number | null; // Int
  }
  ResetPasswordInputType: { // input type
    code?: string | null; // String
    password?: string | null; // String
  }
  ServiceCategoriesInputType: { // input type
    page?: number | null; // Int
    perPage?: number | null; // Int
    search?: string | null; // String
  }
  ServicesInputType: { // input type
    categoryId?: string | null; // String
    page?: number | null; // Int
    perPage?: number | null; // Int
    search?: string | null; // String
  }
  SignupInputType: { // input type
    email: string; // String!
    fullname?: string | null; // String
    password: string; // String!
    phoneNumber: string; // String!
    username: string; // String!
  }
  SignupWithCodeInputType: { // input type
    code: string; // String!
    fullname?: string | null; // String
    password: string; // String!
    phoneNumber: string; // String!
    username: string; // String!
  }
  SubKeywordsInputType: { // input type
    parentId: string; // ID!
    query?: NexusGenInputs['KeywordsInputType'] | null; // KeywordsInputType
  }
  SyncContentPageChannelInputType: { // input type
    channelType?: NexusGenEnums['ChannelType'] | null; // ChannelType
    content: string; // String!
    contentId: string; // ID!
    contentType?: NexusGenEnums['ContentTypeEnum'] | null; // ContentTypeEnum
    pageIds?: Array<string | null> | null; // [String]
  }
  UpdateContentInputType: { // input type
    content?: string | null; // String
    id?: string | null; // ID
    link?: string | null; // String
    serviceId?: string | null; // ID
    title?: string | null; // String
  }
  UpdateConversationInputType: { // input type
    id: string; // ID!
    title: string; // String!
  }
  UpdateDocumentInputType: { // input type
    data?: NexusGenInputs['DocumentDataInputType'] | null; // DocumentDataInputType
    id?: string | null; // ID
  }
  UpdateFolderImageInputType: { // input type
    description?: string | null; // String
    id?: string | null; // ID
    name?: string | null; // String
  }
  UpdateImageInputType: { // input type
    description?: string | null; // String
    id?: string | null; // ID
    name?: string | null; // String
  }
  UpdateKeywordDataInputType: { // input type
    value?: string | null; // String
  }
  UpdateKeywordInputType: { // input type
    data?: NexusGenInputs['UpdateKeywordDataInputType'] | null; // UpdateKeywordDataInputType
    id: string; // ID!
  }
  UpdateLanguageInputType: { // input type
    id?: string | null; // ID
    isDefault?: boolean | null; // Boolean
    label?: string | null; // String
    value?: string | null; // String
  }
  UpdatePackageInputType: { // input type
    id?: string | null; // ID
    isActive?: boolean | null; // Boolean
    isShow?: boolean | null; // Boolean
    name?: string | null; // String
    type?: NexusGenEnums['PackageType'] | null; // PackageType
  }
  UpdatePackageItemInputType: { // input type
    content?: string | null; // String
    freeTime?: number | null; // Int
    id?: string | null; // ID
    isActive?: boolean | null; // Boolean
    numberWord?: number | null; // Int
    packageParentId?: string | null; // ID
    packagePeriodId?: string | null; // ID
    price?: number | null; // Int
  }
  UpdatePackagePeriodInputType: { // input type
    id?: string | null; // ID
    isActive?: boolean | null; // Boolean
    name?: string | null; // String
    order?: number | null; // Int
    time?: number | null; // Int
  }
  UpdatePageChannelInputType: { // input type
    id?: string | null; // ID
    isActive?: boolean | null; // Boolean
    name?: string | null; // String
    password?: string | null; // String
    type?: NexusGenEnums['ChannelType'] | null; // ChannelType
    url?: string | null; // String
    username?: string | null; // String
  }
  UpdateProjectInputType: { // input type
    data?: NexusGenInputs['ProjectDataInputType'] | null; // ProjectDataInputType
    id?: string | null; // ID
  }
  UpdateServiceCategoryInputType: { // input type
    data?: NexusGenInputs['AddServiceCategoryInputType'] | null; // AddServiceCategoryInputType
    id: string; // ID!
    order?: number | null; // Int
  }
  UpdateServiceInputType: { // input type
    data?: NexusGenInputs['DataServiceInputType'] | null; // DataServiceInputType
    id?: string | null; // ID
  }
  UpdateSettingInputType: { // input type
    bonusBalanceSignup?: number | null; // Float
    documentLink?: string | null; // String
    fieldDescription?: string | null; // String
    fieldLanguage?: string | null; // String
    fieldMainKeyword?: string | null; // String
    fieldParagraph?: string | null; // String
    fieldStyleContent?: string | null; // String
    fieldSubKeyword?: string | null; // String
    fieldTitle?: string | null; // String
    id?: string | null; // ID
    numberOfTimeUseGpt4?: number | null; // Int
    priceToken?: number | null; // Float
    timeTrial?: number | null; // Int
  }
  UpdateStyleContentInputType: { // input type
    id?: string | null; // ID
    label?: string | null; // String
    value?: string | null; // String
  }
  UpdateTeamInputType: { // input type
    data?: NexusGenInputs['DataTeamInputType'] | null; // DataTeamInputType
    id?: string | null; // ID
  }
  UpdateUserInputType: { // input type
    data?: NexusGenInputs['DataUpdateUserInputType'] | null; // DataUpdateUserInputType
  }
  UpdateWorkspaceAdminInputType: { // input type
    balance?: number | null; // Float
    id: string; // ID!
    isTrial?: boolean | null; // Boolean
  }
  UpdateWorkspaceInputType: { // input type
    description?: string | null; // String
    id?: string | null; // ID
    name?: string | null; // String
  }
  UsersInputType: { // input type
    page?: number | null; // Int
    perPage?: number | null; // Int
    search?: string | null; // String
  }
}

export interface NexusGenEnums {
  ChannelType: "Facebook" | "Wordpress" | "Zalo"
  ContentTypeEnum: "content" | "document"
  ConversationType: "Chat" | "Research"
  CustomFieldInputType: "Input" | "Language" | "StyleContent" | "Textarea"
  ModelAi: "Davinci" | "GPT" | "GPT4"
  PackageType: "Basic" | "Premium" | "Trial"
  TransactionType: "TransferPayment"
  TypeAiSettingApp: "Content" | "Description" | "Insert" | "Outline" | "Rewrite" | "Title" | "Write"
  TypeFile: "Document" | "Image"
  UserRole: "Admin" | "AdminStaff" | "RootAdmin" | "Staff" | "User"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  AiSettingApp: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // ID
    leadingSentence?: string | null; // String
    max_tokens?: number | null; // Int
    type?: NexusGenEnums['TypeAiSettingApp'] | null; // TypeAiSettingApp
  }
  BuyWord: { // root type
    confirmById?: string | null; // ID
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    createdById?: string | null; // ID
    id?: string | null; // ID
    isCancel?: boolean | null; // Boolean
    isConfirm?: boolean | null; // Boolean
    numberWord?: number | null; // Int
    price?: number | null; // Int
    transactionType?: NexusGenEnums['TransactionType'] | null; // TransactionType
    workspaceId?: string | null; // ID
  }
  BuyWordsResponseData: { // root type
    data?: Array<NexusGenRootTypes['BuyWord'] | null> | null; // [BuyWord]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Code: { // root type
    code?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    email?: string | null; // String
    id?: string | null; // ID
  }
  Content: { // root type
    content?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    createdById?: string | null; // ID
    id?: string | null; // ID
    link?: string | null; // String
    serviceId?: string | null; // ID
    title?: string | null; // String
  }
  ContentsResponseType: { // root type
    data?: Array<NexusGenRootTypes['Content'] | null> | null; // [Content]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Conversation: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    createdBy?: NexusGenRootTypes['User'] | null; // User
    docId?: string | null; // ID
    id?: string | null; // ID
    projectId?: string | null; // ID
    title?: string | null; // String
    type?: NexusGenEnums['ConversationType'] | null; // ConversationType
  }
  ConversationItem: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    createdById?: string | null; // ID
    id?: string | null; // ID
    message?: string | null; // String
  }
  ConversationsRepsonse: { // root type
    data?: Array<NexusGenRootTypes['Conversation'] | null> | null; // [Conversation]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  CustomField: { // root type
    active?: boolean | null; // Boolean
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    field?: string | null; // String
    id?: string | null; // ID
    inputType?: NexusGenEnums['CustomFieldInputType'] | null; // CustomFieldInputType
    isDelete?: boolean | null; // Boolean
    title?: string | null; // String
  }
  Document: { // root type
    content?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    createdById?: string | null; // ID
    description?: string | null; // String
    id?: string | null; // ID
    isDraft?: boolean | null; // Boolean
    keywordId?: string | null; // ID
    outline?: string | null; // String
    parentId?: string | null; // ID
    projectId?: string | null; // ID
    slug?: string | null; // String
    title?: string | null; // String
    url?: string | null; // String
    userId?: string | null; // ID
  }
  DocumentsResponseType: { // root type
    data?: Array<NexusGenRootTypes['Document'] | null> | null; // [Document]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  EmailSignup: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    email?: string | null; // String
    id?: string | null; // ID
  }
  FolderImage: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    id?: string | null; // ID
    isPublic?: boolean | null; // Boolean
    name?: string | null; // String
    projectId?: string | null; // ID
    slug?: string | null; // String
    type?: NexusGenEnums['TypeFile'] | null; // TypeFile
  }
  FolderImagesResponse: { // root type
    data?: Array<NexusGenRootTypes['FolderImage'] | null> | null; // [FolderImage]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  GetTotalTokenDocResponseData: { // root type
    totalPrice?: number | null; // Float
    totalToken?: number | null; // Int
  }
  Image: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    folderId?: string | null; // ID
    id?: string | null; // ID
    isEmbedded?: boolean | null; // Boolean
    isPublic?: boolean | null; // Boolean
    name?: string | null; // String
    projectId?: string | null; // ID
    type?: NexusGenEnums['TypeFile'] | null; // TypeFile
    url?: string | null; // String
  }
  ImagesResponse: { // root type
    data?: Array<NexusGenRootTypes['Image'] | null> | null; // [Image]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Keyword: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    id?: string | null; // ID
    parentId?: string | null; // ID
    projectId?: string | null; // ID
    value?: string | null; // String
  }
  KeywordsOfUserAppResponse: { // root type
    data?: Array<NexusGenRootTypes['Keyword'] | null> | null; // [Keyword]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  KeywordsResponse: { // root type
    data?: Array<NexusGenRootTypes['Keyword'] | null> | null; // [Keyword]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Language: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    createdBy?: NexusGenRootTypes['User'] | null; // User
    createdById?: string | null; // ID
    id?: string | null; // ID
    isDefault?: boolean | null; // Boolean
    label?: string | null; // String
    value?: string | null; // String
  }
  ListMessageConversationResponse: { // root type
    data?: Array<NexusGenRootTypes['ConversationItem'] | null> | null; // [ConversationItem]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Mutation: {};
  Package: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // ID
    isActive?: boolean | null; // Boolean
    isShow?: boolean | null; // Boolean
    name?: string | null; // String
    type?: NexusGenEnums['PackageType'] | null; // PackageType
  }
  PackageItem: { // root type
    content?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    freeTime?: number | null; // Int
    id?: string | null; // ID
    isActive?: boolean | null; // Boolean
    numberWord?: number | null; // Int
    packageParentId?: string | null; // ID
    packagePeriodId?: string | null; // ID
    price?: number | null; // Int
  }
  PackagePeriod: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // ID
    isActive?: boolean | null; // Boolean
    name?: string | null; // String
    order?: number | null; // Int
    time?: number | null; // Int
  }
  PageChannel: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // ID
    isActive?: boolean | null; // Boolean
    name?: string | null; // String
    pageChannelId?: string | null; // String
    password?: string | null; // String
    token?: string | null; // String
    type?: NexusGenEnums['ChannelType'] | null; // ChannelType
    url?: string | null; // String
    username?: string | null; // String
  }
  PageChannelsResponseData: { // root type
    data?: Array<NexusGenRootTypes['PageChannel'] | null> | null; // [PageChannel]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  PaginationType: { // root type
    page?: number | null; // Int
    perPage?: number | null; // Int
    total?: number | null; // Int
  }
  PaymentHistoriesResponse: { // root type
    data?: Array<NexusGenRootTypes['PaymentHistory'] | null> | null; // [PaymentHistory]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  PaymentHistory: { // root type
    amount?: number | null; // Int
    cancelById: string; // ID!
    confirmAt?: string | null; // String
    confirmById?: string | null; // ID
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    createdById?: string | null; // ID
    id?: string | null; // ID
    isCancel?: boolean | null; // Boolean
    isConfirm?: boolean | null; // Boolean
    packageItemId?: string | null; // ID
    transactionType?: NexusGenEnums['TransactionType'] | null; // TransactionType
    workspaceId?: string | null; // ID
  }
  Pexels: { // root type
    alt?: string | null; // String
    avg_color?: string | null; // String
    id?: number | null; // Int
    src?: string | null; // String
  }
  PexelsPhotosResponseData: { // root type
    data?: Array<NexusGenRootTypes['Pexels'] | null> | null; // [Pexels]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  PostOfUserAppResponse: { // root type
    data?: Array<NexusGenRootTypes['Document'] | null> | null; // [Document]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  PricingResponse: { // root type
    packages?: Array<NexusGenRootTypes['Package'] | null> | null; // [Package]
    periods?: Array<NexusGenRootTypes['PackagePeriod'] | null> | null; // [PackagePeriod]
  }
  Project: { // root type
    active?: boolean | null; // Boolean
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    default?: boolean | null; // Boolean
    description?: string | null; // String
    id?: string | null; // ID
    name?: string | null; // String
    teamId?: string | null; // String
    url?: string | null; // String
    userId?: string | null; // String
  }
  ProjectOfUserAppResponse: { // root type
    data?: Array<NexusGenRootTypes['Project'] | null> | null; // [Project]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  ProjectsResponseType: { // root type
    data?: Array<NexusGenRootTypes['Project'] | null> | null; // [Project]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Query: {};
  RequestHistoriesResponseData: { // root type
    data?: Array<NexusGenRootTypes['RequestHistory'] | null> | null; // [RequestHistory]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  RequestHistory: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // ID
    price?: number | null; // Float
    projectId?: string | null; // ID
    tokens?: number | null; // Int
    userId?: string | null; // ID
    workspaceId?: string | null; // ID
  }
  Service: { // root type
    categoryId?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    customFieldIds?: Array<string | null> | null; // [String]
    description?: string | null; // String
    id?: string | null; // ID
    isDelete?: boolean | null; // Boolean
    leadingLanguage?: string | null; // String
    leadingSentence?: string | null; // String
    leadingStyleContent?: string | null; // String
    model?: NexusGenEnums['ModelAi'] | null; // ModelAi
    slug?: string | null; // String
    systemMessage?: string | null; // String
    title?: string | null; // String
  }
  ServiceCategoriesResponseType: { // root type
    data?: Array<NexusGenRootTypes['ServiceCategory'] | null> | null; // [ServiceCategory]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  ServiceCategory: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    id?: string | null; // ID
    order?: number | null; // Int
    services?: Array<NexusGenRootTypes['Service'] | null> | null; // [Service]
    slug?: string | null; // String
    title?: string | null; // String
  }
  ServicesResponseType: { // root type
    data?: Array<NexusGenRootTypes['Service'] | null> | null; // [Service]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Setting: { // root type
    bonusBalanceSignup?: number | null; // Float
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    documentLink?: string | null; // String
    fieldDescription?: string | null; // String
    fieldLanguage?: string | null; // String
    fieldMainKeyword?: string | null; // String
    fieldParagraph?: string | null; // String
    fieldStyleContent?: string | null; // String
    fieldSubKeyword?: string | null; // String
    fieldTitle?: string | null; // String
    id?: string | null; // ID
    numberOfTimeUseGpt4?: number | null; // Int
    priceToken?: number | null; // Float
    timeTrial?: number | null; // Int
  }
  StyleContent: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    createdBy?: NexusGenRootTypes['User'] | null; // User
    createdById?: string | null; // ID
    id?: string | null; // ID
    label?: string | null; // String
    value?: string | null; // String
  }
  Team: { // root type
    active?: boolean | null; // Boolean
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    default?: boolean | null; // Boolean
    id?: string | null; // ID
    memberIds?: Array<string | null> | null; // [String]
    name?: string | null; // String
    ownerId?: string | null; // ID
  }
  User: { // root type
    active?: boolean | null; // Boolean
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    defaultProjectId?: string | null; // ID
    defaultTeamId?: string | null; // ID
    email: string; // String!
    fullname?: string | null; // String
    id: string; // ID!
    isDeveloper?: boolean | null; // Boolean
    isVerify?: boolean | null; // Boolean
    password?: string | null; // String
    phoneNumber?: string | null; // String
    role?: NexusGenEnums['UserRole'] | null; // UserRole
    username: string; // String!
    workspaceId?: string | null; // ID
  }
  UsersDataResponse: { // root type
    data?: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    pagination?: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Workspace: { // root type
    balance?: number | null; // Float
    bucket?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    expiredAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // ID
    isTrial?: boolean | null; // Boolean
    name?: string | null; // String
    owner?: NexusGenRootTypes['User'] | null; // User
    ownerId?: string | null; // ID
  }
  WorkspacePackage: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    freeTime?: number | null; // Int
    id?: string | null; // ID
    isActive?: boolean | null; // Boolean
    numberWord?: number | null; // Int
    packageItemId?: string | null; // ID
    startDateWord?: NexusGenScalars['DateTime'] | null; // DateTime
    time?: number | null; // Int
    timeUseGpt4?: number | null; // Int
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  AiSettingApp: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // ID
    leadingSentence: string | null; // String
    max_tokens: number | null; // Int
    type: NexusGenEnums['TypeAiSettingApp'] | null; // TypeAiSettingApp
  }
  BuyWord: { // field return type
    confirmBy: NexusGenRootTypes['User'] | null; // User
    confirmById: string | null; // ID
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    createdBy: NexusGenRootTypes['User'] | null; // User
    createdById: string | null; // ID
    id: string | null; // ID
    isCancel: boolean | null; // Boolean
    isConfirm: boolean | null; // Boolean
    numberWord: number | null; // Int
    price: number | null; // Int
    transactionType: NexusGenEnums['TransactionType'] | null; // TransactionType
    workspace: NexusGenRootTypes['Workspace'] | null; // Workspace
    workspaceId: string | null; // ID
  }
  BuyWordsResponseData: { // field return type
    data: Array<NexusGenRootTypes['BuyWord'] | null> | null; // [BuyWord]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Code: { // field return type
    code: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    email: string | null; // String
    id: string | null; // ID
    isExpired: boolean | null; // Boolean
  }
  Content: { // field return type
    content: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    createdBy: NexusGenRootTypes['User'] | null; // User
    createdById: string | null; // ID
    id: string | null; // ID
    link: string | null; // String
    service: NexusGenRootTypes['Service'] | null; // Service
    serviceId: string | null; // ID
    title: string | null; // String
  }
  ContentsResponseType: { // field return type
    data: Array<NexusGenRootTypes['Content'] | null> | null; // [Content]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Conversation: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    createdBy: NexusGenRootTypes['User'] | null; // User
    doc: NexusGenRootTypes['Image'] | null; // Image
    docId: string | null; // ID
    id: string | null; // ID
    projectId: string | null; // ID
    title: string | null; // String
    type: NexusGenEnums['ConversationType'] | null; // ConversationType
  }
  ConversationItem: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    createdBy: NexusGenRootTypes['User'] | null; // User
    createdById: string | null; // ID
    id: string | null; // ID
    message: string | null; // String
  }
  ConversationsRepsonse: { // field return type
    data: Array<NexusGenRootTypes['Conversation'] | null> | null; // [Conversation]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  CustomField: { // field return type
    active: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    field: string | null; // String
    id: string | null; // ID
    inputType: NexusGenEnums['CustomFieldInputType'] | null; // CustomFieldInputType
    isDelete: boolean | null; // Boolean
    title: string | null; // String
  }
  Document: { // field return type
    content: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    createdBy: NexusGenRootTypes['User'] | null; // User
    createdById: string | null; // ID
    description: string | null; // String
    draftId: string | null; // ID
    hasDraft: boolean | null; // Boolean
    id: string | null; // ID
    isDraft: boolean | null; // Boolean
    keyword: NexusGenRootTypes['Keyword'] | null; // Keyword
    keywordId: string | null; // ID
    outline: string | null; // String
    parentId: string | null; // ID
    project: NexusGenRootTypes['Project'] | null; // Project
    projectId: string | null; // ID
    slug: string | null; // String
    title: string | null; // String
    url: string | null; // String
    userId: string | null; // ID
  }
  DocumentsResponseType: { // field return type
    data: Array<NexusGenRootTypes['Document'] | null> | null; // [Document]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  EmailSignup: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    email: string | null; // String
    id: string | null; // ID
  }
  FolderImage: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    id: string | null; // ID
    isPublic: boolean | null; // Boolean
    name: string | null; // String
    project: NexusGenRootTypes['Project'] | null; // Project
    projectId: string | null; // ID
    slug: string | null; // String
    totalImage: number | null; // Int
    type: NexusGenEnums['TypeFile'] | null; // TypeFile
  }
  FolderImagesResponse: { // field return type
    data: Array<NexusGenRootTypes['FolderImage'] | null> | null; // [FolderImage]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  GetTotalTokenDocResponseData: { // field return type
    totalPrice: number | null; // Float
    totalToken: number | null; // Int
  }
  Image: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    folder: NexusGenRootTypes['FolderImage'] | null; // FolderImage
    folderId: string | null; // ID
    id: string | null; // ID
    isEmbedded: boolean | null; // Boolean
    isPublic: boolean | null; // Boolean
    name: string | null; // String
    project: NexusGenRootTypes['Project'] | null; // Project
    projectId: string | null; // ID
    src: string | null; // String
    type: NexusGenEnums['TypeFile'] | null; // TypeFile
    url: string | null; // String
  }
  ImagesResponse: { // field return type
    data: Array<NexusGenRootTypes['Image'] | null> | null; // [Image]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Keyword: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    id: string | null; // ID
    parentId: string | null; // ID
    parentKeyword: NexusGenRootTypes['Keyword'] | null; // Keyword
    projectId: string | null; // ID
    subKeywords: Array<NexusGenRootTypes['Keyword'] | null> | null; // [Keyword]
    value: string | null; // String
  }
  KeywordsOfUserAppResponse: { // field return type
    data: Array<NexusGenRootTypes['Keyword'] | null> | null; // [Keyword]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  KeywordsResponse: { // field return type
    data: Array<NexusGenRootTypes['Keyword'] | null> | null; // [Keyword]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Language: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    createdBy: NexusGenRootTypes['User'] | null; // User
    createdById: string | null; // ID
    id: string | null; // ID
    isDefault: boolean | null; // Boolean
    label: string | null; // String
    value: string | null; // String
  }
  ListMessageConversationResponse: { // field return type
    data: Array<NexusGenRootTypes['ConversationItem'] | null> | null; // [ConversationItem]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Mutation: { // field return type
    addConversation: NexusGenRootTypes['Conversation'] | null; // Conversation
    addCustomField: NexusGenRootTypes['CustomField'] | null; // CustomField
    addCustomer: NexusGenRootTypes['User'] | null; // User
    addFolderImage: NexusGenRootTypes['FolderImage'] | null; // FolderImage
    addKeyword: NexusGenRootTypes['Keyword'] | null; // Keyword
    addMember: NexusGenRootTypes['User'] | null; // User
    addMessageInConversation: NexusGenRootTypes['ConversationItem'] | null; // ConversationItem
    addPostOfUserApp: NexusGenRootTypes['Document'] | null; // Document
    addProject: NexusGenRootTypes['Project'] | null; // Project
    addRootAdmin: NexusGenRootTypes['User'] | null; // User
    addService: NexusGenRootTypes['Service'] | null; // Service
    addServiceCategory: NexusGenRootTypes['ServiceCategory'] | null; // ServiceCategory
    addTeam: NexusGenRootTypes['Team'] | null; // Team
    addUserAdmin: NexusGenRootTypes['User'] | null; // User
    addWpPost: boolean | null; // Boolean
    cancelPaymentHistory: NexusGenRootTypes['PaymentHistory'] | null; // PaymentHistory
    changeDefaultProject: NexusGenRootTypes['Project'] | null; // Project
    changeDefaultProjectUser: NexusGenRootTypes['Project'] | null; // Project
    changeDefaultTeam: NexusGenRootTypes['User'] | null; // User
    changeEmail: boolean | null; // Boolean
    changeExpiredTimeWorkspace: NexusGenRootTypes['Workspace'] | null; // Workspace
    changePassword: boolean | null; // Boolean
    confirmPaymentHistory: NexusGenRootTypes['PaymentHistory'] | null; // PaymentHistory
    confirmPaymentHistory1: NexusGenRootTypes['PaymentHistory'] | null; // PaymentHistory
    confirmRequestBuyWord: boolean | null; // Boolean
    connectFacebookPage: boolean | null; // Boolean
    createAiSettingApp: NexusGenRootTypes['AiSettingApp'] | null; // AiSettingApp
    createCode: Array<number | null> | null; // [Int]
    createDocument: NexusGenRootTypes['Document'] | null; // Document
    createPaymentHistory: boolean | null; // Boolean
    createTableSupabase: boolean | null; // Boolean
    deleteContent: boolean | null; // Boolean
    deleteConversation: boolean | null; // Boolean
    deleteCustomField: boolean | null; // Boolean
    deleteDocument: boolean | null; // Boolean
    deleteFolderImage: boolean | null; // Boolean
    deleteImage: boolean | null; // Boolean
    deleteKeyword: boolean | null; // Boolean
    deleteLanguage: boolean | null; // Boolean
    deleteMember: boolean | null; // Boolean
    deleteMessageInConversation: boolean | null; // Boolean
    deletePageChannel: boolean | null; // Boolean
    deletePaymentHistory: boolean | null; // Boolean
    deletePostOfUserApp: boolean | null; // Boolean
    deleteProject: boolean | null; // Boolean
    deleteService: boolean | null; // Boolean
    deleteServiceCategory: boolean | null; // Boolean
    deleteStyleContent: boolean | null; // Boolean
    deleteTeam: boolean | null; // Boolean
    embeddedDocument: boolean | null; // Boolean
    embeddedDocument1: boolean | null; // Boolean
    embeddedDocument3: boolean | null; // Boolean
    forgotPassword: boolean | null; // Boolean
    generateImageWithReplicate: string | null; // String
    getTotalTokenDoc: NexusGenRootTypes['GetTotalTokenDocResponseData'] | null; // GetTotalTokenDocResponseData
    login: NexusGenRootTypes['User'] | null; // User
    loginApp: NexusGenRootTypes['User'] | null; // User
    logout: boolean | null; // Boolean
    payContentAI: boolean | null; // Boolean
    payRequestAiContent: number | null; // Int
    reSearchDocument: string | null; // String
    requestBuyWord: NexusGenRootTypes['BuyWord'] | null; // BuyWord
    resetPassword: boolean | null; // Boolean
    saveDraftDocument: NexusGenRootTypes['Document'] | null; // Document
    signUp: NexusGenRootTypes['User'] | null; // User
    signUpWithCode: NexusGenRootTypes['User'] | null; // User
    signupVerify: boolean | null; // Boolean
    signupVerify1: boolean | null; // Boolean
    syncContentPageChannel: boolean | null; // Boolean
    testSendEmail: string | null; // String
    updateContent: NexusGenRootTypes['Content'] | null; // Content
    updateConversation: NexusGenRootTypes['Conversation'] | null; // Conversation
    updateDocument: NexusGenRootTypes['Document'] | null; // Document
    updateFolderImage: NexusGenRootTypes['FolderImage'] | null; // FolderImage
    updateImage: NexusGenRootTypes['Image'] | null; // Image
    updateKeyword: NexusGenRootTypes['Keyword'] | null; // Keyword
    updateLanguage: NexusGenRootTypes['Language'] | null; // Language
    updatePackage: NexusGenRootTypes['Package'] | null; // Package
    updatePackageItem: NexusGenRootTypes['PackageItem'] | null; // PackageItem
    updatePackagePeriod: NexusGenRootTypes['PackagePeriod'] | null; // PackagePeriod
    updatePageChannel: NexusGenRootTypes['PageChannel'] | null; // PageChannel
    updateProject: NexusGenRootTypes['Project'] | null; // Project
    updateService: NexusGenRootTypes['Service'] | null; // Service
    updateServiceCategory: NexusGenRootTypes['ServiceCategory'] | null; // ServiceCategory
    updateSetting: NexusGenRootTypes['Setting'] | null; // Setting
    updateStyleContent: NexusGenRootTypes['StyleContent'] | null; // StyleContent
    updateTeam: NexusGenRootTypes['Team'] | null; // Team
    updateTimeUseGpt4: NexusGenRootTypes['WorkspacePackage'] | null; // WorkspacePackage
    updateUser: NexusGenRootTypes['User'] | null; // User
    updateWorkspace: NexusGenRootTypes['Workspace'] | null; // Workspace
    updateWorkspaceAdmin: NexusGenRootTypes['Workspace'] | null; // Workspace
  }
  Package: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // ID
    isActive: boolean | null; // Boolean
    isShow: boolean | null; // Boolean
    name: string | null; // String
    packageItems: Array<NexusGenRootTypes['PackageItem'] | null> | null; // [PackageItem]
    type: NexusGenEnums['PackageType'] | null; // PackageType
  }
  PackageItem: { // field return type
    content: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    freeTime: number | null; // Int
    id: string | null; // ID
    isActive: boolean | null; // Boolean
    numberWord: number | null; // Int
    packageParent: NexusGenRootTypes['Package'] | null; // Package
    packageParentId: string | null; // ID
    packagePeriod: NexusGenRootTypes['PackagePeriod'] | null; // PackagePeriod
    packagePeriodId: string | null; // ID
    price: number | null; // Int
  }
  PackagePeriod: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // ID
    isActive: boolean | null; // Boolean
    name: string | null; // String
    order: number | null; // Int
    time: number | null; // Int
  }
  PageChannel: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // ID
    isActive: boolean | null; // Boolean
    name: string | null; // String
    pageChannelId: string | null; // String
    password: string | null; // String
    token: string | null; // String
    type: NexusGenEnums['ChannelType'] | null; // ChannelType
    url: string | null; // String
    username: string | null; // String
  }
  PageChannelsResponseData: { // field return type
    data: Array<NexusGenRootTypes['PageChannel'] | null> | null; // [PageChannel]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  PaginationType: { // field return type
    page: number | null; // Int
    perPage: number | null; // Int
    total: number | null; // Int
  }
  PaymentHistoriesResponse: { // field return type
    data: Array<NexusGenRootTypes['PaymentHistory'] | null> | null; // [PaymentHistory]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  PaymentHistory: { // field return type
    amount: number | null; // Int
    cancelBy: NexusGenRootTypes['User'] | null; // User
    cancelById: string; // ID!
    confirmAt: string | null; // String
    confirmBy: NexusGenRootTypes['User'] | null; // User
    confirmById: string | null; // ID
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    createdBy: NexusGenRootTypes['User'] | null; // User
    createdById: string | null; // ID
    id: string | null; // ID
    isCancel: boolean | null; // Boolean
    isConfirm: boolean | null; // Boolean
    packageItem: NexusGenRootTypes['PackageItem'] | null; // PackageItem
    packageItemId: string | null; // ID
    transactionType: NexusGenEnums['TransactionType'] | null; // TransactionType
    workspaceId: string | null; // ID
  }
  Pexels: { // field return type
    alt: string | null; // String
    avg_color: string | null; // String
    id: number | null; // Int
    src: string | null; // String
  }
  PexelsPhotosResponseData: { // field return type
    data: Array<NexusGenRootTypes['Pexels'] | null> | null; // [Pexels]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  PostOfUserAppResponse: { // field return type
    data: Array<NexusGenRootTypes['Document'] | null> | null; // [Document]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  PricingResponse: { // field return type
    packages: Array<NexusGenRootTypes['Package'] | null> | null; // [Package]
    periods: Array<NexusGenRootTypes['PackagePeriod'] | null> | null; // [PackagePeriod]
  }
  Project: { // field return type
    active: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    default: boolean | null; // Boolean
    description: string | null; // String
    id: string | null; // ID
    name: string | null; // String
    teamId: string | null; // String
    url: string | null; // String
    userId: string | null; // String
  }
  ProjectOfUserAppResponse: { // field return type
    data: Array<NexusGenRootTypes['Project'] | null> | null; // [Project]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  ProjectsResponseType: { // field return type
    data: Array<NexusGenRootTypes['Project'] | null> | null; // [Project]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Query: { // field return type
    aiSettingApps: Array<NexusGenRootTypes['AiSettingApp'] | null> | null; // [AiSettingApp]
    code: NexusGenRootTypes['Code'] | null; // Code
    content: NexusGenRootTypes['Content'] | null; // Content
    contents: NexusGenRootTypes['ContentsResponseType'] | null; // ContentsResponseType
    conversation: NexusGenRootTypes['Conversation'] | null; // Conversation
    conversationDefault: NexusGenRootTypes['Conversation'] | null; // Conversation
    conversations: NexusGenRootTypes['ConversationsRepsonse'] | null; // ConversationsRepsonse
    customFields: Array<NexusGenRootTypes['CustomField'] | null> | null; // [CustomField]
    document: NexusGenRootTypes['Document'] | null; // Document
    documents: NexusGenRootTypes['DocumentsResponseType'] | null; // DocumentsResponseType
    folderImage: NexusGenRootTypes['FolderImage'] | null; // FolderImage
    folderImages: NexusGenRootTypes['FolderImagesResponse'] | null; // FolderImagesResponse
    getEmailSignup: NexusGenRootTypes['EmailSignup'] | null; // EmailSignup
    image: NexusGenRootTypes['Image'] | null; // Image
    images: NexusGenRootTypes['ImagesResponse'] | null; // ImagesResponse
    keyword: NexusGenRootTypes['Keyword'] | null; // Keyword
    keywords: NexusGenRootTypes['KeywordsResponse'] | null; // KeywordsResponse
    keywordsOfUserApp: NexusGenRootTypes['KeywordsOfUserAppResponse'] | null; // KeywordsOfUserAppResponse
    languages: Array<NexusGenRootTypes['Language'] | null> | null; // [Language]
    listBuyWordAdmin: NexusGenRootTypes['BuyWordsResponseData'] | null; // BuyWordsResponseData
    listMessageConversation: NexusGenRootTypes['ListMessageConversationResponse'] | null; // ListMessageConversationResponse
    me: NexusGenRootTypes['User'] | null; // User
    packagePeriods: Array<NexusGenRootTypes['PackagePeriod'] | null> | null; // [PackagePeriod]
    packages: Array<NexusGenRootTypes['Package'] | null> | null; // [Package]
    pageChannels: NexusGenRootTypes['PageChannelsResponseData'] | null; // PageChannelsResponseData
    paymentHistoriesAdmin: NexusGenRootTypes['PaymentHistoriesResponse'] | null; // PaymentHistoriesResponse
    paymentHistoriesUser: NexusGenRootTypes['PaymentHistoriesResponse'] | null; // PaymentHistoriesResponse
    pexelsPhotos: NexusGenRootTypes['PexelsPhotosResponseData'] | null; // PexelsPhotosResponseData
    postOfUserApp: NexusGenRootTypes['Document'] | null; // Document
    postsOfUserApp: NexusGenRootTypes['PostOfUserAppResponse'] | null; // PostOfUserAppResponse
    pricing: NexusGenRootTypes['PricingResponse'] | null; // PricingResponse
    project: NexusGenRootTypes['Project'] | null; // Project
    projectDefault: NexusGenRootTypes['Project'] | null; // Project
    projectOfUserApp: NexusGenRootTypes['ProjectOfUserAppResponse'] | null; // ProjectOfUserAppResponse
    projects: NexusGenRootTypes['ProjectsResponseType'] | null; // ProjectsResponseType
    requestHistories: NexusGenRootTypes['RequestHistoriesResponseData'] | null; // RequestHistoriesResponseData
    researchDocument1: string | null; // String
    service: NexusGenRootTypes['Service'] | null; // Service
    serviceCategories: NexusGenRootTypes['ServiceCategoriesResponseType'] | null; // ServiceCategoriesResponseType
    serviceCategoriesCustomer: Array<NexusGenRootTypes['ServiceCategory'] | null> | null; // [ServiceCategory]
    serviceCategory: NexusGenRootTypes['ServiceCategory'] | null; // ServiceCategory
    services: NexusGenRootTypes['ServicesResponseType'] | null; // ServicesResponseType
    servicesDashboard: NexusGenRootTypes['ServicesResponseType'] | null; // ServicesResponseType
    setting: NexusGenRootTypes['Setting'] | null; // Setting
    styleContents: Array<NexusGenRootTypes['StyleContent'] | null> | null; // [StyleContent]
    subKeywords: NexusGenRootTypes['KeywordsResponse'] | null; // KeywordsResponse
    team: NexusGenRootTypes['Team'] | null; // Team
    teamDefault: NexusGenRootTypes['Team'] | null; // Team
    teams: Array<NexusGenRootTypes['Team'] | null> | null; // [Team]
    testSupabase: boolean | null; // Boolean
    user: NexusGenRootTypes['User'] | null; // User
    userInfoApp: NexusGenRootTypes['User'] | null; // User
    users: NexusGenRootTypes['UsersDataResponse'] | null; // UsersDataResponse
    workspace: NexusGenRootTypes['Workspace'] | null; // Workspace
    workspacePackage: NexusGenRootTypes['WorkspacePackage'] | null; // WorkspacePackage
    workspaces: Array<NexusGenRootTypes['Workspace'] | null> | null; // [Workspace]
    wpPosts: string | null; // String
  }
  RequestHistoriesResponseData: { // field return type
    data: Array<NexusGenRootTypes['RequestHistory'] | null> | null; // [RequestHistory]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  RequestHistory: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // ID
    price: number | null; // Float
    project: NexusGenRootTypes['Project'] | null; // Project
    projectId: string | null; // ID
    tokens: number | null; // Int
    user: NexusGenRootTypes['User'] | null; // User
    userId: string | null; // ID
    workspace: NexusGenRootTypes['Workspace'] | null; // Workspace
    workspaceId: string | null; // ID
  }
  Service: { // field return type
    category: NexusGenRootTypes['ServiceCategory'] | null; // ServiceCategory
    categoryId: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    customFieldIds: Array<string | null> | null; // [String]
    customFields: Array<NexusGenRootTypes['CustomField'] | null> | null; // [CustomField]
    description: string | null; // String
    id: string | null; // ID
    isDelete: boolean | null; // Boolean
    leadingLanguage: string | null; // String
    leadingSentence: string | null; // String
    leadingStyleContent: string | null; // String
    model: NexusGenEnums['ModelAi'] | null; // ModelAi
    slug: string | null; // String
    systemMessage: string | null; // String
    title: string | null; // String
  }
  ServiceCategoriesResponseType: { // field return type
    data: Array<NexusGenRootTypes['ServiceCategory'] | null> | null; // [ServiceCategory]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  ServiceCategory: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    id: string | null; // ID
    order: number | null; // Int
    services: Array<NexusGenRootTypes['Service'] | null> | null; // [Service]
    slug: string | null; // String
    title: string | null; // String
  }
  ServicesResponseType: { // field return type
    data: Array<NexusGenRootTypes['Service'] | null> | null; // [Service]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Setting: { // field return type
    bonusBalanceSignup: number | null; // Float
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    documentLink: string | null; // String
    fieldDescription: string | null; // String
    fieldLanguage: string | null; // String
    fieldMainKeyword: string | null; // String
    fieldParagraph: string | null; // String
    fieldStyleContent: string | null; // String
    fieldSubKeyword: string | null; // String
    fieldTitle: string | null; // String
    id: string | null; // ID
    numberOfTimeUseGpt4: number | null; // Int
    priceToken: number | null; // Float
    timeTrial: number | null; // Int
  }
  StyleContent: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    createdBy: NexusGenRootTypes['User'] | null; // User
    createdById: string | null; // ID
    id: string | null; // ID
    label: string | null; // String
    value: string | null; // String
  }
  Team: { // field return type
    active: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    default: boolean | null; // Boolean
    id: string | null; // ID
    memberIds: Array<string | null> | null; // [String]
    members: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    name: string | null; // String
    ownerId: string | null; // ID
  }
  User: { // field return type
    active: boolean | null; // Boolean
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    defaultProject: NexusGenRootTypes['Project'] | null; // Project
    defaultProjectId: string | null; // ID
    defaultTeamId: string | null; // ID
    email: string; // String!
    fullname: string | null; // String
    id: string; // ID!
    isDeveloper: boolean | null; // Boolean
    isVerify: boolean | null; // Boolean
    password: string | null; // String
    phoneNumber: string | null; // String
    role: NexusGenEnums['UserRole'] | null; // UserRole
    username: string; // String!
    workspace: NexusGenRootTypes['Workspace'] | null; // Workspace
    workspaceId: string | null; // ID
  }
  UsersDataResponse: { // field return type
    data: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    pagination: NexusGenRootTypes['PaginationType'] | null; // PaginationType
  }
  Workspace: { // field return type
    balance: number | null; // Float
    bucket: string | null; // String
    bucketSize: number | null; // Int
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    expiredAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // ID
    isOwner: boolean | null; // Boolean
    isTrial: boolean | null; // Boolean
    name: string | null; // String
    owner: NexusGenRootTypes['User'] | null; // User
    ownerId: string | null; // ID
    timeTrial: number | null; // Int
    workspacePackage: NexusGenRootTypes['WorkspacePackage'] | null; // WorkspacePackage
  }
  WorkspacePackage: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    freeTime: number | null; // Int
    id: string | null; // ID
    isActive: boolean | null; // Boolean
    numberWord: number | null; // Int
    packageItem: NexusGenRootTypes['PackageItem'] | null; // PackageItem
    packageItemId: string | null; // ID
    startDateWord: NexusGenScalars['DateTime'] | null; // DateTime
    time: number | null; // Int
    timeUseGpt4: number | null; // Int
  }
}

export interface NexusGenFieldTypeNames {
  AiSettingApp: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    leadingSentence: 'String'
    max_tokens: 'Int'
    type: 'TypeAiSettingApp'
  }
  BuyWord: { // field return type name
    confirmBy: 'User'
    confirmById: 'ID'
    createdAt: 'DateTime'
    createdBy: 'User'
    createdById: 'ID'
    id: 'ID'
    isCancel: 'Boolean'
    isConfirm: 'Boolean'
    numberWord: 'Int'
    price: 'Int'
    transactionType: 'TransactionType'
    workspace: 'Workspace'
    workspaceId: 'ID'
  }
  BuyWordsResponseData: { // field return type name
    data: 'BuyWord'
    pagination: 'PaginationType'
  }
  Code: { // field return type name
    code: 'String'
    createdAt: 'DateTime'
    email: 'String'
    id: 'ID'
    isExpired: 'Boolean'
  }
  Content: { // field return type name
    content: 'String'
    createdAt: 'DateTime'
    createdBy: 'User'
    createdById: 'ID'
    id: 'ID'
    link: 'String'
    service: 'Service'
    serviceId: 'ID'
    title: 'String'
  }
  ContentsResponseType: { // field return type name
    data: 'Content'
    pagination: 'PaginationType'
  }
  Conversation: { // field return type name
    createdAt: 'DateTime'
    createdBy: 'User'
    doc: 'Image'
    docId: 'ID'
    id: 'ID'
    projectId: 'ID'
    title: 'String'
    type: 'ConversationType'
  }
  ConversationItem: { // field return type name
    createdAt: 'DateTime'
    createdBy: 'User'
    createdById: 'ID'
    id: 'ID'
    message: 'String'
  }
  ConversationsRepsonse: { // field return type name
    data: 'Conversation'
    pagination: 'PaginationType'
  }
  CustomField: { // field return type name
    active: 'Boolean'
    createdAt: 'DateTime'
    description: 'String'
    field: 'String'
    id: 'ID'
    inputType: 'CustomFieldInputType'
    isDelete: 'Boolean'
    title: 'String'
  }
  Document: { // field return type name
    content: 'String'
    createdAt: 'DateTime'
    createdBy: 'User'
    createdById: 'ID'
    description: 'String'
    draftId: 'ID'
    hasDraft: 'Boolean'
    id: 'ID'
    isDraft: 'Boolean'
    keyword: 'Keyword'
    keywordId: 'ID'
    outline: 'String'
    parentId: 'ID'
    project: 'Project'
    projectId: 'ID'
    slug: 'String'
    title: 'String'
    url: 'String'
    userId: 'ID'
  }
  DocumentsResponseType: { // field return type name
    data: 'Document'
    pagination: 'PaginationType'
  }
  EmailSignup: { // field return type name
    createdAt: 'DateTime'
    email: 'String'
    id: 'ID'
  }
  FolderImage: { // field return type name
    createdAt: 'DateTime'
    description: 'String'
    id: 'ID'
    isPublic: 'Boolean'
    name: 'String'
    project: 'Project'
    projectId: 'ID'
    slug: 'String'
    totalImage: 'Int'
    type: 'TypeFile'
  }
  FolderImagesResponse: { // field return type name
    data: 'FolderImage'
    pagination: 'PaginationType'
  }
  GetTotalTokenDocResponseData: { // field return type name
    totalPrice: 'Float'
    totalToken: 'Int'
  }
  Image: { // field return type name
    createdAt: 'DateTime'
    description: 'String'
    folder: 'FolderImage'
    folderId: 'ID'
    id: 'ID'
    isEmbedded: 'Boolean'
    isPublic: 'Boolean'
    name: 'String'
    project: 'Project'
    projectId: 'ID'
    src: 'String'
    type: 'TypeFile'
    url: 'String'
  }
  ImagesResponse: { // field return type name
    data: 'Image'
    pagination: 'PaginationType'
  }
  Keyword: { // field return type name
    createdAt: 'DateTime'
    description: 'String'
    id: 'ID'
    parentId: 'ID'
    parentKeyword: 'Keyword'
    projectId: 'ID'
    subKeywords: 'Keyword'
    value: 'String'
  }
  KeywordsOfUserAppResponse: { // field return type name
    data: 'Keyword'
    pagination: 'PaginationType'
  }
  KeywordsResponse: { // field return type name
    data: 'Keyword'
    pagination: 'PaginationType'
  }
  Language: { // field return type name
    createdAt: 'DateTime'
    createdBy: 'User'
    createdById: 'ID'
    id: 'ID'
    isDefault: 'Boolean'
    label: 'String'
    value: 'String'
  }
  ListMessageConversationResponse: { // field return type name
    data: 'ConversationItem'
    pagination: 'PaginationType'
  }
  Mutation: { // field return type name
    addConversation: 'Conversation'
    addCustomField: 'CustomField'
    addCustomer: 'User'
    addFolderImage: 'FolderImage'
    addKeyword: 'Keyword'
    addMember: 'User'
    addMessageInConversation: 'ConversationItem'
    addPostOfUserApp: 'Document'
    addProject: 'Project'
    addRootAdmin: 'User'
    addService: 'Service'
    addServiceCategory: 'ServiceCategory'
    addTeam: 'Team'
    addUserAdmin: 'User'
    addWpPost: 'Boolean'
    cancelPaymentHistory: 'PaymentHistory'
    changeDefaultProject: 'Project'
    changeDefaultProjectUser: 'Project'
    changeDefaultTeam: 'User'
    changeEmail: 'Boolean'
    changeExpiredTimeWorkspace: 'Workspace'
    changePassword: 'Boolean'
    confirmPaymentHistory: 'PaymentHistory'
    confirmPaymentHistory1: 'PaymentHistory'
    confirmRequestBuyWord: 'Boolean'
    connectFacebookPage: 'Boolean'
    createAiSettingApp: 'AiSettingApp'
    createCode: 'Int'
    createDocument: 'Document'
    createPaymentHistory: 'Boolean'
    createTableSupabase: 'Boolean'
    deleteContent: 'Boolean'
    deleteConversation: 'Boolean'
    deleteCustomField: 'Boolean'
    deleteDocument: 'Boolean'
    deleteFolderImage: 'Boolean'
    deleteImage: 'Boolean'
    deleteKeyword: 'Boolean'
    deleteLanguage: 'Boolean'
    deleteMember: 'Boolean'
    deleteMessageInConversation: 'Boolean'
    deletePageChannel: 'Boolean'
    deletePaymentHistory: 'Boolean'
    deletePostOfUserApp: 'Boolean'
    deleteProject: 'Boolean'
    deleteService: 'Boolean'
    deleteServiceCategory: 'Boolean'
    deleteStyleContent: 'Boolean'
    deleteTeam: 'Boolean'
    embeddedDocument: 'Boolean'
    embeddedDocument1: 'Boolean'
    embeddedDocument3: 'Boolean'
    forgotPassword: 'Boolean'
    generateImageWithReplicate: 'String'
    getTotalTokenDoc: 'GetTotalTokenDocResponseData'
    login: 'User'
    loginApp: 'User'
    logout: 'Boolean'
    payContentAI: 'Boolean'
    payRequestAiContent: 'Int'
    reSearchDocument: 'String'
    requestBuyWord: 'BuyWord'
    resetPassword: 'Boolean'
    saveDraftDocument: 'Document'
    signUp: 'User'
    signUpWithCode: 'User'
    signupVerify: 'Boolean'
    signupVerify1: 'Boolean'
    syncContentPageChannel: 'Boolean'
    testSendEmail: 'String'
    updateContent: 'Content'
    updateConversation: 'Conversation'
    updateDocument: 'Document'
    updateFolderImage: 'FolderImage'
    updateImage: 'Image'
    updateKeyword: 'Keyword'
    updateLanguage: 'Language'
    updatePackage: 'Package'
    updatePackageItem: 'PackageItem'
    updatePackagePeriod: 'PackagePeriod'
    updatePageChannel: 'PageChannel'
    updateProject: 'Project'
    updateService: 'Service'
    updateServiceCategory: 'ServiceCategory'
    updateSetting: 'Setting'
    updateStyleContent: 'StyleContent'
    updateTeam: 'Team'
    updateTimeUseGpt4: 'WorkspacePackage'
    updateUser: 'User'
    updateWorkspace: 'Workspace'
    updateWorkspaceAdmin: 'Workspace'
  }
  Package: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    isActive: 'Boolean'
    isShow: 'Boolean'
    name: 'String'
    packageItems: 'PackageItem'
    type: 'PackageType'
  }
  PackageItem: { // field return type name
    content: 'String'
    createdAt: 'DateTime'
    freeTime: 'Int'
    id: 'ID'
    isActive: 'Boolean'
    numberWord: 'Int'
    packageParent: 'Package'
    packageParentId: 'ID'
    packagePeriod: 'PackagePeriod'
    packagePeriodId: 'ID'
    price: 'Int'
  }
  PackagePeriod: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    isActive: 'Boolean'
    name: 'String'
    order: 'Int'
    time: 'Int'
  }
  PageChannel: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    isActive: 'Boolean'
    name: 'String'
    pageChannelId: 'String'
    password: 'String'
    token: 'String'
    type: 'ChannelType'
    url: 'String'
    username: 'String'
  }
  PageChannelsResponseData: { // field return type name
    data: 'PageChannel'
    pagination: 'PaginationType'
  }
  PaginationType: { // field return type name
    page: 'Int'
    perPage: 'Int'
    total: 'Int'
  }
  PaymentHistoriesResponse: { // field return type name
    data: 'PaymentHistory'
    pagination: 'PaginationType'
  }
  PaymentHistory: { // field return type name
    amount: 'Int'
    cancelBy: 'User'
    cancelById: 'ID'
    confirmAt: 'String'
    confirmBy: 'User'
    confirmById: 'ID'
    createdAt: 'DateTime'
    createdBy: 'User'
    createdById: 'ID'
    id: 'ID'
    isCancel: 'Boolean'
    isConfirm: 'Boolean'
    packageItem: 'PackageItem'
    packageItemId: 'ID'
    transactionType: 'TransactionType'
    workspaceId: 'ID'
  }
  Pexels: { // field return type name
    alt: 'String'
    avg_color: 'String'
    id: 'Int'
    src: 'String'
  }
  PexelsPhotosResponseData: { // field return type name
    data: 'Pexels'
    pagination: 'PaginationType'
  }
  PostOfUserAppResponse: { // field return type name
    data: 'Document'
    pagination: 'PaginationType'
  }
  PricingResponse: { // field return type name
    packages: 'Package'
    periods: 'PackagePeriod'
  }
  Project: { // field return type name
    active: 'Boolean'
    createdAt: 'DateTime'
    default: 'Boolean'
    description: 'String'
    id: 'ID'
    name: 'String'
    teamId: 'String'
    url: 'String'
    userId: 'String'
  }
  ProjectOfUserAppResponse: { // field return type name
    data: 'Project'
    pagination: 'PaginationType'
  }
  ProjectsResponseType: { // field return type name
    data: 'Project'
    pagination: 'PaginationType'
  }
  Query: { // field return type name
    aiSettingApps: 'AiSettingApp'
    code: 'Code'
    content: 'Content'
    contents: 'ContentsResponseType'
    conversation: 'Conversation'
    conversationDefault: 'Conversation'
    conversations: 'ConversationsRepsonse'
    customFields: 'CustomField'
    document: 'Document'
    documents: 'DocumentsResponseType'
    folderImage: 'FolderImage'
    folderImages: 'FolderImagesResponse'
    getEmailSignup: 'EmailSignup'
    image: 'Image'
    images: 'ImagesResponse'
    keyword: 'Keyword'
    keywords: 'KeywordsResponse'
    keywordsOfUserApp: 'KeywordsOfUserAppResponse'
    languages: 'Language'
    listBuyWordAdmin: 'BuyWordsResponseData'
    listMessageConversation: 'ListMessageConversationResponse'
    me: 'User'
    packagePeriods: 'PackagePeriod'
    packages: 'Package'
    pageChannels: 'PageChannelsResponseData'
    paymentHistoriesAdmin: 'PaymentHistoriesResponse'
    paymentHistoriesUser: 'PaymentHistoriesResponse'
    pexelsPhotos: 'PexelsPhotosResponseData'
    postOfUserApp: 'Document'
    postsOfUserApp: 'PostOfUserAppResponse'
    pricing: 'PricingResponse'
    project: 'Project'
    projectDefault: 'Project'
    projectOfUserApp: 'ProjectOfUserAppResponse'
    projects: 'ProjectsResponseType'
    requestHistories: 'RequestHistoriesResponseData'
    researchDocument1: 'String'
    service: 'Service'
    serviceCategories: 'ServiceCategoriesResponseType'
    serviceCategoriesCustomer: 'ServiceCategory'
    serviceCategory: 'ServiceCategory'
    services: 'ServicesResponseType'
    servicesDashboard: 'ServicesResponseType'
    setting: 'Setting'
    styleContents: 'StyleContent'
    subKeywords: 'KeywordsResponse'
    team: 'Team'
    teamDefault: 'Team'
    teams: 'Team'
    testSupabase: 'Boolean'
    user: 'User'
    userInfoApp: 'User'
    users: 'UsersDataResponse'
    workspace: 'Workspace'
    workspacePackage: 'WorkspacePackage'
    workspaces: 'Workspace'
    wpPosts: 'String'
  }
  RequestHistoriesResponseData: { // field return type name
    data: 'RequestHistory'
    pagination: 'PaginationType'
  }
  RequestHistory: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    price: 'Float'
    project: 'Project'
    projectId: 'ID'
    tokens: 'Int'
    user: 'User'
    userId: 'ID'
    workspace: 'Workspace'
    workspaceId: 'ID'
  }
  Service: { // field return type name
    category: 'ServiceCategory'
    categoryId: 'String'
    createdAt: 'DateTime'
    customFieldIds: 'String'
    customFields: 'CustomField'
    description: 'String'
    id: 'ID'
    isDelete: 'Boolean'
    leadingLanguage: 'String'
    leadingSentence: 'String'
    leadingStyleContent: 'String'
    model: 'ModelAi'
    slug: 'String'
    systemMessage: 'String'
    title: 'String'
  }
  ServiceCategoriesResponseType: { // field return type name
    data: 'ServiceCategory'
    pagination: 'PaginationType'
  }
  ServiceCategory: { // field return type name
    createdAt: 'DateTime'
    description: 'String'
    id: 'ID'
    order: 'Int'
    services: 'Service'
    slug: 'String'
    title: 'String'
  }
  ServicesResponseType: { // field return type name
    data: 'Service'
    pagination: 'PaginationType'
  }
  Setting: { // field return type name
    bonusBalanceSignup: 'Float'
    createdAt: 'DateTime'
    documentLink: 'String'
    fieldDescription: 'String'
    fieldLanguage: 'String'
    fieldMainKeyword: 'String'
    fieldParagraph: 'String'
    fieldStyleContent: 'String'
    fieldSubKeyword: 'String'
    fieldTitle: 'String'
    id: 'ID'
    numberOfTimeUseGpt4: 'Int'
    priceToken: 'Float'
    timeTrial: 'Int'
  }
  StyleContent: { // field return type name
    createdAt: 'DateTime'
    createdBy: 'User'
    createdById: 'ID'
    id: 'ID'
    label: 'String'
    value: 'String'
  }
  Team: { // field return type name
    active: 'Boolean'
    createdAt: 'DateTime'
    default: 'Boolean'
    id: 'ID'
    memberIds: 'String'
    members: 'User'
    name: 'String'
    ownerId: 'ID'
  }
  User: { // field return type name
    active: 'Boolean'
    createdAt: 'DateTime'
    defaultProject: 'Project'
    defaultProjectId: 'ID'
    defaultTeamId: 'ID'
    email: 'String'
    fullname: 'String'
    id: 'ID'
    isDeveloper: 'Boolean'
    isVerify: 'Boolean'
    password: 'String'
    phoneNumber: 'String'
    role: 'UserRole'
    username: 'String'
    workspace: 'Workspace'
    workspaceId: 'ID'
  }
  UsersDataResponse: { // field return type name
    data: 'User'
    pagination: 'PaginationType'
  }
  Workspace: { // field return type name
    balance: 'Float'
    bucket: 'String'
    bucketSize: 'Int'
    createdAt: 'DateTime'
    description: 'String'
    expiredAt: 'DateTime'
    id: 'ID'
    isOwner: 'Boolean'
    isTrial: 'Boolean'
    name: 'String'
    owner: 'User'
    ownerId: 'ID'
    timeTrial: 'Int'
    workspacePackage: 'WorkspacePackage'
  }
  WorkspacePackage: { // field return type name
    createdAt: 'DateTime'
    freeTime: 'Int'
    id: 'ID'
    isActive: 'Boolean'
    numberWord: 'Int'
    packageItem: 'PackageItem'
    packageItemId: 'ID'
    startDateWord: 'DateTime'
    time: 'Int'
    timeUseGpt4: 'Int'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addConversation: { // args
      input?: NexusGenInputs['AddConversationInputType'] | null; // AddConversationInputType
    }
    addCustomField: { // args
      input?: NexusGenInputs['AddCustomFieldInputType'] | null; // AddCustomFieldInputType
    }
    addCustomer: { // args
      input?: NexusGenInputs['AddCustomerInputType'] | null; // AddCustomerInputType
    }
    addFolderImage: { // args
      input?: NexusGenInputs['AddFolderImageInputType'] | null; // AddFolderImageInputType
    }
    addKeyword: { // args
      input?: NexusGenInputs['KeywordDataInputType'] | null; // KeywordDataInputType
    }
    addMember: { // args
      input?: NexusGenInputs['AddMemberInputType'] | null; // AddMemberInputType
    }
    addMessageInConversation: { // args
      input?: NexusGenInputs['ConversationItemInputType'] | null; // ConversationItemInputType
    }
    addPostOfUserApp: { // args
      input?: NexusGenInputs['AddPostOfUserAppInput'] | null; // AddPostOfUserAppInput
    }
    addProject: { // args
      input?: NexusGenInputs['ProjectDataInputType'] | null; // ProjectDataInputType
    }
    addRootAdmin: { // args
      input?: NexusGenInputs['AddRootAdminInputType'] | null; // AddRootAdminInputType
    }
    addService: { // args
      input?: NexusGenInputs['DataServiceInputType'] | null; // DataServiceInputType
    }
    addServiceCategory: { // args
      input?: NexusGenInputs['AddServiceCategoryInputType'] | null; // AddServiceCategoryInputType
    }
    addTeam: { // args
      input?: NexusGenInputs['DataTeamInputType'] | null; // DataTeamInputType
    }
    addUserAdmin: { // args
      input?: NexusGenInputs['AddUserAdminInputType'] | null; // AddUserAdminInputType
    }
    cancelPaymentHistory: { // args
      id: string; // ID!
    }
    changeDefaultProject: { // args
      input?: NexusGenInputs['ChangeDefaultProjectInputType'] | null; // ChangeDefaultProjectInputType
    }
    changeDefaultProjectUser: { // args
      projectId: string; // ID!
    }
    changeDefaultTeam: { // args
      teamId?: string | null; // ID
    }
    changeEmail: { // args
      input?: NexusGenInputs['ChangeEmailUserInputType'] | null; // ChangeEmailUserInputType
    }
    changeExpiredTimeWorkspace: { // args
      input?: NexusGenInputs['ChangeExpiredTimeWorkspaceInputType'] | null; // ChangeExpiredTimeWorkspaceInputType
    }
    changePassword: { // args
      input?: NexusGenInputs['ChangePasswordUserInputType'] | null; // ChangePasswordUserInputType
    }
    confirmPaymentHistory: { // args
      id: string; // ID!
    }
    confirmPaymentHistory1: { // args
      id: string; // ID!
    }
    confirmRequestBuyWord: { // args
      input?: NexusGenInputs['ConfirmRequestBuyWordInputType'] | null; // ConfirmRequestBuyWordInputType
    }
    createAiSettingApp: { // args
      input?: NexusGenInputs['CreateAiSettingAppInputType'] | null; // CreateAiSettingAppInputType
    }
    createDocument: { // args
      input?: NexusGenInputs['DocumentDataInputType'] | null; // DocumentDataInputType
    }
    createPaymentHistory: { // args
      input?: NexusGenInputs['CreatePaymentHistoryInputType'] | null; // CreatePaymentHistoryInputType
    }
    deleteContent: { // args
      id: string; // ID!
    }
    deleteConversation: { // args
      conversationId?: string | null; // ID
    }
    deleteCustomField: { // args
      id: string; // ID!
    }
    deleteDocument: { // args
      id: string; // String!
    }
    deleteFolderImage: { // args
      id: string; // ID!
    }
    deleteImage: { // args
      id?: string | null; // String
    }
    deleteKeyword: { // args
      id: string; // String!
    }
    deleteLanguage: { // args
      id: string; // ID!
    }
    deleteMember: { // args
      memberId: string; // ID!
    }
    deleteMessageInConversation: { // args
      messageId: string; // ID!
    }
    deletePageChannel: { // args
      id?: string | null; // ID
    }
    deletePaymentHistory: { // args
      id: string; // ID!
    }
    deletePostOfUserApp: { // args
      postId: string; // ID!
      userId: string; // ID!
    }
    deleteProject: { // args
      id: string; // String!
    }
    deleteService: { // args
      id: string; // String!
    }
    deleteServiceCategory: { // args
      id: string; // String!
    }
    deleteStyleContent: { // args
      id: string; // ID!
    }
    deleteTeam: { // args
      teamId: string; // ID!
    }
    embeddedDocument: { // args
      documentId?: string | null; // ID
    }
    embeddedDocument1: { // args
      documentId?: string | null; // ID
    }
    embeddedDocument3: { // args
      documentId?: string | null; // ID
    }
    forgotPassword: { // args
      input?: NexusGenInputs['ForgotPasswordInputType'] | null; // ForgotPasswordInputType
    }
    generateImageWithReplicate: { // args
      prompt?: string | null; // String
    }
    getTotalTokenDoc: { // args
      url?: string | null; // String
    }
    login: { // args
      input?: NexusGenInputs['LoginInputType'] | null; // LoginInputType
    }
    loginApp: { // args
      input?: NexusGenInputs['LoginAppInput'] | null; // LoginAppInput
    }
    payContentAI: { // args
      content?: string | null; // String
    }
    payRequestAiContent: { // args
      content?: string | null; // String
      token?: number | null; // Int
    }
    reSearchDocument: { // args
      input?: NexusGenInputs['ReSearchDocumentInputType'] | null; // ReSearchDocumentInputType
    }
    requestBuyWord: { // args
      input?: NexusGenInputs['RequestBuyWordInputType'] | null; // RequestBuyWordInputType
    }
    resetPassword: { // args
      input?: NexusGenInputs['ResetPasswordInputType'] | null; // ResetPasswordInputType
    }
    saveDraftDocument: { // args
      input?: NexusGenInputs['UpdateDocumentInputType'] | null; // UpdateDocumentInputType
    }
    signUp: { // args
      input?: NexusGenInputs['SignupInputType'] | null; // SignupInputType
    }
    signUpWithCode: { // args
      input?: NexusGenInputs['SignupWithCodeInputType'] | null; // SignupWithCodeInputType
    }
    signupVerify: { // args
      email: string; // String!
    }
    signupVerify1: { // args
      email: string; // String!
    }
    syncContentPageChannel: { // args
      input?: NexusGenInputs['SyncContentPageChannelInputType'] | null; // SyncContentPageChannelInputType
    }
    testSendEmail: { // args
      email?: string | null; // String
    }
    updateContent: { // args
      input?: NexusGenInputs['UpdateContentInputType'] | null; // UpdateContentInputType
    }
    updateConversation: { // args
      input?: NexusGenInputs['UpdateConversationInputType'] | null; // UpdateConversationInputType
    }
    updateDocument: { // args
      input?: NexusGenInputs['UpdateDocumentInputType'] | null; // UpdateDocumentInputType
    }
    updateFolderImage: { // args
      input?: NexusGenInputs['UpdateFolderImageInputType'] | null; // UpdateFolderImageInputType
    }
    updateImage: { // args
      input?: NexusGenInputs['UpdateImageInputType'] | null; // UpdateImageInputType
    }
    updateKeyword: { // args
      input?: NexusGenInputs['UpdateKeywordInputType'] | null; // UpdateKeywordInputType
    }
    updateLanguage: { // args
      input?: NexusGenInputs['UpdateLanguageInputType'] | null; // UpdateLanguageInputType
    }
    updatePackage: { // args
      input?: NexusGenInputs['UpdatePackageInputType'] | null; // UpdatePackageInputType
    }
    updatePackageItem: { // args
      input?: NexusGenInputs['UpdatePackageItemInputType'] | null; // UpdatePackageItemInputType
    }
    updatePackagePeriod: { // args
      input?: NexusGenInputs['UpdatePackagePeriodInputType'] | null; // UpdatePackagePeriodInputType
    }
    updatePageChannel: { // args
      input?: NexusGenInputs['UpdatePageChannelInputType'] | null; // UpdatePageChannelInputType
    }
    updateProject: { // args
      input?: NexusGenInputs['UpdateProjectInputType'] | null; // UpdateProjectInputType
    }
    updateService: { // args
      input?: NexusGenInputs['UpdateServiceInputType'] | null; // UpdateServiceInputType
    }
    updateServiceCategory: { // args
      input?: NexusGenInputs['UpdateServiceCategoryInputType'] | null; // UpdateServiceCategoryInputType
    }
    updateSetting: { // args
      input?: NexusGenInputs['UpdateSettingInputType'] | null; // UpdateSettingInputType
    }
    updateStyleContent: { // args
      input?: NexusGenInputs['UpdateStyleContentInputType'] | null; // UpdateStyleContentInputType
    }
    updateTeam: { // args
      input?: NexusGenInputs['UpdateTeamInputType'] | null; // UpdateTeamInputType
    }
    updateTimeUseGpt4: { // args
      workspacePackageId?: string | null; // ID
    }
    updateUser: { // args
      input?: NexusGenInputs['UpdateUserInputType'] | null; // UpdateUserInputType
    }
    updateWorkspace: { // args
      input?: NexusGenInputs['UpdateWorkspaceInputType'] | null; // UpdateWorkspaceInputType
    }
    updateWorkspaceAdmin: { // args
      input?: NexusGenInputs['UpdateWorkspaceAdminInputType'] | null; // UpdateWorkspaceAdminInputType
    }
  }
  Query: {
    code: { // args
      code: string; // String!
    }
    content: { // args
      id: string; // ID!
    }
    contents: { // args
      input?: NexusGenInputs['ContentsInputType'] | null; // ContentsInputType
    }
    conversation: { // args
      conversationId?: string | null; // ID
    }
    conversationDefault: { // args
      projectId?: string | null; // ID
    }
    conversations: { // args
      input?: NexusGenInputs['ConversationsInputType'] | null; // ConversationsInputType
    }
    document: { // args
      id: string; // String!
      isDraft?: boolean | null; // Boolean
    }
    documents: { // args
      input?: NexusGenInputs['DocumentsInputType'] | null; // DocumentsInputType
    }
    folderImage: { // args
      id?: string | null; // String
    }
    folderImages: { // args
      input?: NexusGenInputs['FolderImagesInputType'] | null; // FolderImagesInputType
    }
    getEmailSignup: { // args
      token?: string | null; // String
    }
    image: { // args
      id?: string | null; // String
    }
    images: { // args
      input?: NexusGenInputs['ImagesInputType'] | null; // ImagesInputType
    }
    keyword: { // args
      id?: string | null; // String
    }
    keywords: { // args
      input?: NexusGenInputs['KeywordsInputType'] | null; // KeywordsInputType
    }
    keywordsOfUserApp: { // args
      input?: NexusGenInputs['KeywordsOfUserAppInput'] | null; // KeywordsOfUserAppInput
    }
    listBuyWordAdmin: { // args
      input?: NexusGenInputs['ListBuyWordAdminInputType'] | null; // ListBuyWordAdminInputType
    }
    listMessageConversation: { // args
      input?: NexusGenInputs['ListMessageConversationInputType'] | null; // ListMessageConversationInputType
    }
    packagePeriods: { // args
      isActive?: boolean | null; // Boolean
    }
    pageChannels: { // args
      input?: NexusGenInputs['PageChannelsInputType'] | null; // PageChannelsInputType
    }
    paymentHistoriesAdmin: { // args
      input?: NexusGenInputs['PaymentHistoriesAdminInputType'] | null; // PaymentHistoriesAdminInputType
    }
    paymentHistoriesUser: { // args
      input?: NexusGenInputs['PaymentHistoriesInputType'] | null; // PaymentHistoriesInputType
    }
    pexelsPhotos: { // args
      input?: NexusGenInputs['PexelsPhotosInputType'] | null; // PexelsPhotosInputType
    }
    postOfUserApp: { // args
      postId?: string | null; // ID
    }
    postsOfUserApp: { // args
      input?: NexusGenInputs['PostOfProjectAppInput'] | null; // PostOfProjectAppInput
    }
    project: { // args
      id: string; // String!
    }
    projectOfUserApp: { // args
      input?: NexusGenInputs['ProjectOfUserAppInput'] | null; // ProjectOfUserAppInput
    }
    projects: { // args
      input?: NexusGenInputs['ProjectsInputType'] | null; // ProjectsInputType
    }
    requestHistories: { // args
      input?: NexusGenInputs['RequestHistoriesInputType'] | null; // RequestHistoriesInputType
    }
    researchDocument1: { // args
      question?: string | null; // String
    }
    service: { // args
      id: string; // String!
    }
    serviceCategories: { // args
      input?: NexusGenInputs['ServiceCategoriesInputType'] | null; // ServiceCategoriesInputType
    }
    serviceCategoriesCustomer: { // args
      search?: string | null; // String
    }
    serviceCategory: { // args
      id: string; // String!
    }
    services: { // args
      input?: NexusGenInputs['ServicesInputType'] | null; // ServicesInputType
    }
    servicesDashboard: { // args
      input?: NexusGenInputs['ServicesInputType'] | null; // ServicesInputType
    }
    subKeywords: { // args
      input?: NexusGenInputs['SubKeywordsInputType'] | null; // SubKeywordsInputType
    }
    team: { // args
      id: string; // String!
    }
    user: { // args
      userId?: string | null; // String
    }
    userInfoApp: { // args
      userId?: string | null; // ID
    }
    users: { // args
      input?: NexusGenInputs['UsersInputType'] | null; // UsersInputType
    }
    workspace: { // args
      id?: string | null; // String
    }
    workspacePackage: { // args
      id?: string | null; // ID
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    
    /**
     * Authorization for an individual field. Returning "true"
     * or "Promise<true>" means the field can be accessed.
     * Returning "false" or "Promise<false>" will respond
     * with a "Not Authorized" error for the field.
     * Returning or throwing an error will also prevent the
     * resolver from executing.
     */
    authorize?: FieldAuthorizeResolver<TypeName, FieldName>
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}