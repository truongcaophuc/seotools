import type { EditorThemeClasses } from 'lexical';

export const EditorTheme = {
    ltr: 'ltr',
    rtl: 'rtl',
    placeholder: 'editor-placeholder',
    paragraph: 'editor-paragraph',
    quote: 'editor-quote',
    heading: {
        h1: 'editor-heading-h1',
        h2: 'editor-heading-h2',
        h3: 'editor-heading-h3',
        h4: 'editor-heading-h4',
        h5: 'editor-heading-h5',
    },
    list: {
        nested: {
            listitem: 'editor-nested-listitem',
        },
        ol: 'editor-list-ol',
        ul: 'editor-list-ul',
        listitem: 'editor-listitem',
    },
    image: 'editor-image',
    link: 'editor-link',
    text: {
        bold: 'editor-text-bold',
        italic: 'editor-text-italic',
        overflowed: 'editor-text-overflowed',
        hashtag: 'editor-text-hashtag',
        underline: 'editor-text-underline',
        strikethrough: 'editor-text-strikethrough',
        underlineStrikethrough: 'editor-text-underlineStrikethrough',
        code: 'editor-text-code',
    },
    code: 'editor-code',
    codeHighlight: {
        atrule: 'editor-tokenAttr',
        attr: 'editor-tokenAttr',
        boolean: 'editor-tokenProperty',
        builtin: 'editor-tokenSelector',
        cdata: 'editor-tokenComment',
        char: 'editor-tokenSelector',
        class: 'editor-tokenFunction',
        'class-name': 'editor-tokenFunction',
        comment: 'editor-tokenComment',
        constant: 'editor-tokenProperty',
        deleted: 'editor-tokenProperty',
        doctype: 'editor-tokenComment',
        entity: 'editor-tokenOperator',
        function: 'editor-tokenFunction',
        important: 'editor-tokenVariable',
        inserted: 'editor-tokenSelector',
        keyword: 'editor-tokenAttr',
        namespace: 'editor-tokenVariable',
        number: 'editor-tokenProperty',
        operator: 'editor-tokenOperator',
        prolog: 'editor-tokenComment',
        property: 'editor-tokenProperty',
        punctuation: 'editor-tokenPunctuation',
        regex: 'editor-tokenVariable',
        selector: 'editor-tokenSelector',
        string: 'editor-tokenSelector',
        symbol: 'editor-tokenProperty',
        tag: 'editor-tokenProperty',
        url: 'editor-tokenOperator',
        variable: 'editor-tokenVariable',
    },
};

const theme: EditorThemeClasses = {
    blockCursor: 'PlaygroundEditorTheme__blockCursor',
    characterLimit: 'PlaygroundEditorTheme__characterLimit',
    code: 'PlaygroundEditorTheme__code',
    codeHighlight: {
        atrule: 'PlaygroundEditorTheme__tokenAttr',
        attr: 'PlaygroundEditorTheme__tokenAttr',
        boolean: 'PlaygroundEditorTheme__tokenProperty',
        builtin: 'PlaygroundEditorTheme__tokenSelector',
        cdata: 'PlaygroundEditorTheme__tokenComment',
        char: 'PlaygroundEditorTheme__tokenSelector',
        class: 'PlaygroundEditorTheme__tokenFunction',
        'class-name': 'PlaygroundEditorTheme__tokenFunction',
        comment: 'PlaygroundEditorTheme__tokenComment',
        constant: 'PlaygroundEditorTheme__tokenProperty',
        deleted: 'PlaygroundEditorTheme__tokenProperty',
        doctype: 'PlaygroundEditorTheme__tokenComment',
        entity: 'PlaygroundEditorTheme__tokenOperator',
        function: 'PlaygroundEditorTheme__tokenFunction',
        important: 'PlaygroundEditorTheme__tokenVariable',
        inserted: 'PlaygroundEditorTheme__tokenSelector',
        keyword: 'PlaygroundEditorTheme__tokenAttr',
        namespace: 'PlaygroundEditorTheme__tokenVariable',
        number: 'PlaygroundEditorTheme__tokenProperty',
        operator: 'PlaygroundEditorTheme__tokenOperator',
        prolog: 'PlaygroundEditorTheme__tokenComment',
        property: 'PlaygroundEditorTheme__tokenProperty',
        punctuation: 'PlaygroundEditorTheme__tokenPunctuation',
        regex: 'PlaygroundEditorTheme__tokenVariable',
        selector: 'PlaygroundEditorTheme__tokenSelector',
        string: 'PlaygroundEditorTheme__tokenSelector',
        symbol: 'PlaygroundEditorTheme__tokenProperty',
        tag: 'PlaygroundEditorTheme__tokenProperty',
        url: 'PlaygroundEditorTheme__tokenOperator',
        variable: 'PlaygroundEditorTheme__tokenVariable',
    },
    embedBlock: {
        base: 'PlaygroundEditorTheme__embedBlock',
        focus: 'PlaygroundEditorTheme__embedBlockFocus',
    },
    hashtag: 'PlaygroundEditorTheme__hashtag',
    heading: {
        h1: 'PlaygroundEditorTheme__h1',
        h2: 'PlaygroundEditorTheme__h2',
        h3: 'PlaygroundEditorTheme__h3',
        h4: 'PlaygroundEditorTheme__h4',
        h5: 'PlaygroundEditorTheme__h5',
        h6: 'PlaygroundEditorTheme__h6',
    },
    image: 'editor-image',
    indent: 'PlaygroundEditorTheme__indent',
    link: 'PlaygroundEditorTheme__link',
    list: {
        listitem: 'PlaygroundEditorTheme__listItem',
        listitemChecked: 'PlaygroundEditorTheme__listItemChecked',
        listitemUnchecked: 'PlaygroundEditorTheme__listItemUnchecked',
        nested: {
            listitem: 'PlaygroundEditorTheme__nestedListItem',
        },
        olDepth: [
            'PlaygroundEditorTheme__ol1',
            'PlaygroundEditorTheme__ol2',
            'PlaygroundEditorTheme__ol3',
            'PlaygroundEditorTheme__ol4',
            'PlaygroundEditorTheme__ol5',
        ],
        ul: 'PlaygroundEditorTheme__ul',
    },
    ltr: 'PlaygroundEditorTheme__ltr',
    mark: 'PlaygroundEditorTheme__mark',
    markOverlap: 'PlaygroundEditorTheme__markOverlap',
    paragraph: 'PlaygroundEditorTheme__paragraph',
    quote: 'PlaygroundEditorTheme__quote',
    rtl: 'PlaygroundEditorTheme__rtl',
    table: 'PlaygroundEditorTheme__table',
    tableAddColumns: 'PlaygroundEditorTheme__tableAddColumns',
    tableAddRows: 'PlaygroundEditorTheme__tableAddRows',
    tableCell: 'PlaygroundEditorTheme__tableCell',
    tableCellActionButton: 'PlaygroundEditorTheme__tableCellActionButton',
    tableCellActionButtonContainer:
        'PlaygroundEditorTheme__tableCellActionButtonContainer',
    tableCellEditing: 'PlaygroundEditorTheme__tableCellEditing',
    tableCellHeader: 'PlaygroundEditorTheme__tableCellHeader',
    tableCellPrimarySelected: 'PlaygroundEditorTheme__tableCellPrimarySelected',
    tableCellResizer: 'PlaygroundEditorTheme__tableCellResizer',
    tableCellSelected: 'PlaygroundEditorTheme__tableCellSelected',
    tableCellSortedIndicator: 'PlaygroundEditorTheme__tableCellSortedIndicator',
    tableResizeRuler: 'PlaygroundEditorTheme__tableCellResizeRuler',
    tableSelected: 'PlaygroundEditorTheme__tableSelected',
    text: {
        bold: 'PlaygroundEditorTheme__textBold',
        code: 'PlaygroundEditorTheme__textCode',
        italic: 'PlaygroundEditorTheme__textItalic',
        strikethrough: 'PlaygroundEditorTheme__textStrikethrough',
        subscript: 'PlaygroundEditorTheme__textSubscript',
        superscript: 'PlaygroundEditorTheme__textSuperscript',
        underline: 'PlaygroundEditorTheme__textUnderline',
        underlineStrikethrough:
            'PlaygroundEditorTheme__textUnderlineStrikethrough',
    },
};

export default theme;
